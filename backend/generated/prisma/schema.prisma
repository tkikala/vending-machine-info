// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
  output   = "../generated/prisma"
}

datasource db {
  provider = "sqlite"
  url      = env("DATABASE_URL")
}

enum PaymentType {
  COIN
  BANKNOTE
  GIROCARD
  CREDIT_CARD
}

model User {
  id       Int              @id @default(autoincrement())
  email    String           @unique
  password String
  name     String
  machines VendingMachine[]
  reviews  Review[]
}

model VendingMachine {
  id             String          @id @default(uuid())
  name           String
  location       String
  ownerId        Int
  owner          User            @relation(fields: [ownerId], references: [id])
  products       Product[]
  paymentMethods PaymentMethod[]
  photos         Photo[]
  reviews        Review[]
}

model Photo {
  id               Int            @id @default(autoincrement())
  url              String
  vendingMachineId String
  vendingMachine   VendingMachine @relation(fields: [vendingMachineId], references: [id])
}

model Product {
  id               Int            @id @default(autoincrement())
  name             String
  description      String?
  photo            String?
  vendingMachineId String
  vendingMachine   VendingMachine @relation(fields: [vendingMachineId], references: [id])
}

model PaymentMethod {
  id               Int            @id @default(autoincrement())
  type             PaymentType
  available        Boolean        @default(false)
  vendingMachineId String
  vendingMachine   VendingMachine @relation(fields: [vendingMachineId], references: [id])
}

model Review {
  id               Int            @id @default(autoincrement())
  rating           Int
  comment          String
  userId           Int
  vendingMachineId String
  user             User           @relation(fields: [userId], references: [id])
  vendingMachine   VendingMachine @relation(fields: [vendingMachineId], references: [id])
  createdAt        DateTime       @default(now())
}
